const { pool } = require('./db');
const bcrypt = require('bcrypt');
require('dotenv').config();

async function setupDatabase() {
  const client = await pool.connect();
  console.log('‚úÖ –ú—ç–¥—ç—ç–ª–ª–∏–π–Ω —Å–∞–Ω—Ç–∞–π —Ö–æ–ª–±–æ–≥–¥–ª–æ–æ.');

  try {
    // 1. XF_USERS —Ö“Ø—Å–Ω—ç–≥—Ç “Ø“Ø—Å–≥—ç—Ö
    await client.query(`
      CREATE TABLE IF NOT EXISTS XF_USERS (
        id SERIAL PRIMARY KEY,
        username VARCHAR(255) NOT NULL UNIQUE,
        password_hash VARCHAR(255) NOT NULL,
        name VARCHAR(255)
      );
    `);
    console.log('‚úÖ XF_USERS —Ö“Ø—Å–Ω—ç–≥—Ç –±—ç–ª—ç–Ω –±–æ–ª–ª–æ–æ.');

    // 2. –ê–Ω—Ö–Ω—ã —Ö—ç—Ä—ç–≥–ª—ç–≥—á–¥–∏–π–≥ –Ω—ç–º—ç—Ö
    const users = [
      { username: 'admin', password: 'password123', name: 'Administrator' },
      { username: 'user', password: 'password', name: 'Standard User' }
    ];

    for (const userData of users) {
      const { username, password, name } = userData;
      const res = await client.query('SELECT * FROM XF_USERS WHERE username = $1', [username]);

      if (res.rows.length === 0) {
        console.log(`‚è≥ '${username}' —Ö—ç—Ä—ç–≥–ª—ç–≥—á–∏–π–≥ –Ω—ç–º–∂ –±–∞–π–Ω–∞...`);
        const salt = await bcrypt.genSalt(10);
        const passwordHash = await bcrypt.hash(password, salt);
        
        await client.query(
          'INSERT INTO XF_USERS (username, password_hash, name) VALUES ($1, $2, $3)',
          [username, passwordHash, name]
        );
        console.log(`‚úÖ '${username}' —Ö—ç—Ä—ç–≥–ª—ç–≥—á–∏–π–≥ –∞–º–∂–∏–ª—Ç—Ç–∞–π –Ω—ç–º–ª—ç—ç.`);

      } else {
        console.log(`üëâ '${username}' —Ö—ç—Ä—ç–≥–ª—ç–≥—á –∞–ª—å —Ö—ç–¥–∏–π–Ω –±“Ø—Ä—Ç–≥—ç–ª—Ç—ç–π –±–∞–π–Ω–∞.`);
      }
    }

  } catch (err) {
    console.error('‚ùå –ú—ç–¥—ç—ç–ª–ª–∏–π–Ω –±–∞–∞–∑—ã–≥ –±—ç–ª–¥—ç—Ö—ç–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞:', err);
  } finally {
    await client.release();
    console.log('üîå –ú—ç–¥—ç—ç–ª–ª–∏–π–Ω —Å–∞–Ω–≥–∞–∞—Å —Ö–æ–ª–±–æ–ª—Ç—ã–≥ —Å–∞–ª–ª–∞–∞.');
    await pool.end(); // Close all connections in the pool
    console.log('üèÅ Pool-–∏–π–Ω –±“Ø—Ö —Ö–æ–ª–±–æ–ª—Ç—ã–≥ —Ö–∞–∞–ª–∞–∞.');
  }
}

setupDatabase();
