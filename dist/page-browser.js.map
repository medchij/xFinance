{"version":3,"file":"page-browser.js","mappings":"kNA8EA,UA3EoBA,EAAGC,oBACrB,MAAOC,EAAKC,IAAUC,EAAAA,EAAAA,UAAS,0BACxBC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,IACrCG,GAAeC,EAAAA,EAAAA,QAAO,MA0B5B,OAdAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAgBA,KACpB,GAAIH,EAAaI,QAAS,CACxB,MAAMC,EAAYL,EAAaI,QAAQE,wBAAwBC,IACzDC,EAAkBC,OAAOC,YAAcL,EAAY,GACzDL,EAAaI,QAAQO,MAAMC,OAAS,GAAGJ,KACzC,GAKF,OAFAL,IACAM,OAAOI,iBAAiB,SAAUV,GAC3B,IAAMM,OAAOK,oBAAoB,SAAUX,EAAc,GAC/D,CAACL,IAGFiB,EAAAA,cAAA,OACEJ,MAAO,CACLK,SAAU,EACVC,QAAS,OACTC,gBAAiBC,EAAAA,EAAOC,wBACxBC,UAAW,QACXC,WAAY5B,EAAgB,IAAM,GAClC6B,WAAY,+BACZC,SAAU,WACVC,OAAQ,EACRC,SAAU,QACVC,QAAS,OACTC,cAAe,WAGjBb,EAAAA,cAACc,EAAAA,EAAK,CAACC,MAAM,qBACXf,EAAAA,cAACgB,EAAAA,EAAK,CACJC,YAAY,wBACZC,MAAOtC,EACPuC,SAAWC,GAAMvC,EAAOuC,EAAEC,OAAOH,UAIrClB,EAAAA,cAAA,OAAKJ,MAAO,CAAEgB,QAAS,OAAQU,IAAK,OAAQC,UAAW,SACrDvB,EAAAA,cAACwB,EAAAA,EAAM,CAACC,WAAW,UAAUC,QAjDhBC,KACjB,IAAK/C,EAAIgD,WAAW,QAElB,YADAC,MAAM,mDAIR,MAAMC,EAAS,wCAAwCC,mBAAmBnD,KAC1EI,EAAa8C,EAAO,GA0CkC,cAGlD9B,EAAAA,cAACwB,EAAAA,EAAM,CAACC,WAAW,YAAYC,QAASA,IAAMhC,OAAOsC,KAAKpD,EAAK,WAAW,sBAK3EG,GACCiB,EAAAA,cAAA,OAAKiC,IAAKhD,EAAcW,MAAO,CAAE2B,UAAW,OAAQtB,SAAU,IAC5DD,EAAAA,cAAA,UACEkC,MAAM,iBACNC,IAAKpD,EACLa,MAAO,CAAEwC,MAAO,OAAQvC,OAAQ,OAAQwC,OAAQ,WAIlD,C","sources":["webpack://office-addin-taskpane-react-js/./src/XFinance/components/BrowserView.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Input, Button, Field, tokens } from \"@fluentui/react-components\";\r\n\r\nconst BrowserView = ({ isSidebarOpen }) => {\r\n  const [url, setUrl] = useState(\"https://wikipedia.org\");\r\n  const [iframeUrl, setIframeUrl] = useState(\"\");\r\n  const containerRef = useRef(null);\r\n\r\n  const handleOpen = () => {\r\n    if (!url.startsWith(\"http\")) {\r\n      alert(\"URL –Ω—å http —ç—Å–≤—ç–ª https –ø—Ä–æ—Ç–æ–∫–æ–ª—Ç–æ–π —ç—Ö–ª—ç—Ö —ë—Å—Ç–æ–π\");\r\n      return;\r\n    }\r\n\r\n    const apiUrl = `http://localhost:4002/api/render?url=${encodeURIComponent(url)}`;\r\n    setIframeUrl(apiUrl);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const resizeHandler = () => {\r\n      if (containerRef.current) {\r\n        const topOffset = containerRef.current.getBoundingClientRect().top;\r\n        const availableHeight = window.innerHeight - topOffset - 20;\r\n        containerRef.current.style.height = `${availableHeight}px`;\r\n      }\r\n    };\r\n\r\n    resizeHandler();\r\n    window.addEventListener(\"resize\", resizeHandler);\r\n    return () => window.removeEventListener(\"resize\", resizeHandler);\r\n  }, [iframeUrl]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        flexGrow: 1,\r\n        padding: \"30px\",\r\n        backgroundColor: tokens.colorNeutralBackground1,\r\n        minHeight: \"100vh\",\r\n        marginLeft: isSidebarOpen ? 250 : 50,\r\n        transition: \"margin-left 0.3s ease-in-out\",\r\n        position: \"relative\",\r\n        zIndex: 1,\r\n        maxWidth: \"600px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <Field label=\"üîó URL –æ—Ä—É—É–ª–Ω–∞ —É—É\">\r\n        <Input\r\n          placeholder=\"https://wikipedia.org\"\r\n          value={url}\r\n          onChange={(e) => setUrl(e.target.value)}\r\n        />\r\n      </Field>\r\n\r\n      <div style={{ display: \"flex\", gap: \"10px\", marginTop: \"10px\" }}>\r\n        <Button appearance=\"primary\" onClick={handleOpen}>\r\n          API-—Ä –Ω—ç—ç—Ö\r\n        </Button>\r\n        <Button appearance=\"secondary\" onClick={() => window.open(url, \"_blank\")}> \r\n          –®–∏–Ω—ç —Ü–æ–Ω—Ö–æ–Ω–¥ –Ω—ç—ç—Ö\r\n        </Button>\r\n      </div>\r\n\r\n      {iframeUrl && (\r\n        <div ref={containerRef} style={{ marginTop: \"10px\", flexGrow: 1 }}>\r\n          <iframe\r\n            title=\"BrowserPreview\"\r\n            src={iframeUrl}\r\n            style={{ width: \"100%\", height: \"100%\", border: \"none\" }}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BrowserView;"],"names":["BrowserView","isSidebarOpen","url","setUrl","useState","iframeUrl","setIframeUrl","containerRef","useRef","useEffect","resizeHandler","current","topOffset","getBoundingClientRect","top","availableHeight","window","innerHeight","style","height","addEventListener","removeEventListener","React","flexGrow","padding","backgroundColor","tokens","colorNeutralBackground1","minHeight","marginLeft","transition","position","zIndex","maxWidth","display","flexDirection","Field","label","Input","placeholder","value","onChange","e","target","gap","marginTop","Button","appearance","onClick","handleOpen","startsWith","alert","apiUrl","encodeURIComponent","open","ref","title","src","width","border"],"sourceRoot":""}