{"version":3,"file":"418.js","mappings":"yMAEIA,EAAkB,KACpB,IACE,OAAO,iBAAM,GAAGC,OACd,oEACCC,EAAEC,UACP,CAAE,MACF,CACA,IACE,OAAO,iBAAM,GAAGF,OAAO,uDAAuDG,kBAAkBC,OAClG,CAAE,MAMF,GAGEC,EAAkB,KAEX,EA0BPC,EAA4B,IAAIC,QACpC,SAASC,EAAgBC,EAAQC,GAC/B,MAAMC,EAAeZ,IACrB,aAAiB,IACVO,EAAUM,IAAID,GAKHF,KAJdH,EAAUO,IAAIF,QACdF,MAKDC,EACL,CAIA,IAAII,EAA0B,IAAIP,QAClC,SAASQ,EAAcC,EAASN,GAC9B,OAAO,WAAe,KACpB,MAAMC,EAAeZ,IACrB,OAAKe,EAAQF,IAAID,GAIVK,KAHLF,EAAQD,IAAIF,GACL,KAEO,GACfD,EACL,CAGA,SAASO,EAAcD,EAASN,GAC9B,IAAIQ,EACJ,MAAMC,EAAed,MAAqB,EACpCe,EAAWD,EAAeJ,EAAgB,UAC1CM,EAAaF,EAAeX,EAAkB,aAC7Cc,EAAYC,GAAqD,OAAzCL,EAAKE,GAAS,IAAMJ,KAAWN,IAAiBQ,EAAK,CAClF,KACA,IAAM,MAKR,OAHAG,GAAW,IACFE,GACNb,GACIY,CACT,C,iQCrFA,MAAME,EAAQ,CAAC,MAAO,QAAS,SAAU,QAGnC,EAAMC,KAAKC,IACX,EAAMD,KAAKE,IACXC,EAAQH,KAAKG,MAEbC,GADQJ,KAAKK,MACEC,IAAK,CACxBC,EAAGD,EACHE,EAAGF,KAECG,EAAkB,CACtBC,KAAM,QACNC,MAAO,OACPC,OAAQ,MACRC,IAAK,UAEDC,EAAuB,CAC3BC,MAAO,MACPC,IAAK,SAEP,SAASC,EAAMF,EAAOG,EAAOF,GAC3B,OAAO,EAAID,EAAO,EAAIG,EAAOF,GAC/B,CACA,SAAS,EAASE,EAAOC,GACvB,MAAwB,mBAAVD,EAAuBA,EAAMC,GAASD,CACtD,CACA,SAAS,EAAQE,GACf,OAAOA,EAAUC,MAAM,KAAK,EAC9B,CACA,SAAS,EAAaD,GACpB,OAAOA,EAAUC,MAAM,KAAK,EAC9B,CACA,SAASC,EAAgBC,GACvB,MAAgB,MAATA,EAAe,IAAM,GAC9B,CACA,SAASC,EAAcD,GACrB,MAAgB,MAATA,EAAe,SAAW,OACnC,CACA,SAAS,EAAYH,GACnB,MAAO,CAAC,MAAO,UAAUK,SAAS,EAAQL,IAAc,IAAM,GAChE,CACA,SAASM,EAAiBN,GACxB,OAAOE,EAAgB,EAAYF,GACrC,CAkBA,SAAS,EAA8BA,GACrC,OAAOA,EAAUO,QAAQ,cAAcC,GAAad,EAAqBc,IAC3E,CA6BA,SAASC,EAAqBT,GAC5B,OAAOA,EAAUO,QAAQ,0BAA0BG,GAAQrB,EAAgBqB,IAC7E,CAUA,SAAS,EAAiBC,GACxB,MAA0B,iBAAZA,EAVhB,SAA6BA,GAC3B,MAAO,CACLlB,IAAK,EACLF,MAAO,EACPC,OAAQ,EACRF,KAAM,KACHqB,EAEP,CAEuCC,CAAoBD,GAAW,CAClElB,IAAKkB,EACLpB,MAAOoB,EACPnB,OAAQmB,EACRrB,KAAMqB,EAEV,CACA,SAAS,EAAiBE,GACxB,MAAM,EACJ1B,EAAC,EACDC,EAAC,MACD0B,EAAK,OACLC,GACEF,EACJ,MAAO,CACLC,QACAC,SACAtB,IAAKL,EACLE,KAAMH,EACNI,MAAOJ,EAAI2B,EACXtB,OAAQJ,EAAI2B,EACZ5B,IACAC,IAEJ,CCpIA,SAAS4B,EAA2BC,EAAMjB,EAAWkB,GACnD,IAAI,UACFC,EAAS,SACTC,GACEH,EACJ,MAAMI,EAAW,EAAYrB,GACvBsB,EAAgBhB,EAAiBN,GACjCuB,EAAcnB,EAAckB,GAC5BZ,EAAO,EAAQV,GACfwB,EAA0B,MAAbH,EACbI,EAAUN,EAAUhC,EAAIgC,EAAUL,MAAQ,EAAIM,EAASN,MAAQ,EAC/DY,EAAUP,EAAU/B,EAAI+B,EAAUJ,OAAS,EAAIK,EAASL,OAAS,EACjEY,EAAcR,EAAUI,GAAe,EAAIH,EAASG,GAAe,EACzE,IAAIK,EACJ,OAAQlB,GACN,IAAK,MACHkB,EAAS,CACPzC,EAAGsC,EACHrC,EAAG+B,EAAU/B,EAAIgC,EAASL,QAE5B,MACF,IAAK,SACHa,EAAS,CACPzC,EAAGsC,EACHrC,EAAG+B,EAAU/B,EAAI+B,EAAUJ,QAE7B,MACF,IAAK,QACHa,EAAS,CACPzC,EAAGgC,EAAUhC,EAAIgC,EAAUL,MAC3B1B,EAAGsC,GAEL,MACF,IAAK,OACHE,EAAS,CACPzC,EAAGgC,EAAUhC,EAAIiC,EAASN,MAC1B1B,EAAGsC,GAEL,MACF,QACEE,EAAS,CACPzC,EAAGgC,EAAUhC,EACbC,EAAG+B,EAAU/B,GAGnB,OAAQ,EAAaY,IACnB,IAAK,QACH4B,EAAON,IAAkBK,GAAeT,GAAOM,GAAc,EAAI,GACjE,MACF,IAAK,MACHI,EAAON,IAAkBK,GAAeT,GAAOM,GAAc,EAAI,GAGrE,OAAOI,CACT,CAqGAC,eAAeC,EAAeC,EAAOC,GACnC,IAAIC,OACY,IAAZD,IACFA,EAAU,CAAC,GAEb,MAAM,EACJ7C,EAAC,EACDC,EAAC,SACD8C,EAAQ,MACRC,EAAK,SACLC,EAAQ,SACRC,GACEN,GACE,SACJO,EAAW,oBAAmB,aAC9BC,EAAe,WAAU,eACzBC,EAAiB,WAAU,YAC3BC,GAAc,EAAK,QACnB9B,EAAU,GACR,EAASqB,EAASD,GAChBW,EAAgB,EAAiB/B,GAEjCgC,EAAUP,EAASK,EADa,aAAnBD,EAAgC,YAAc,WACbA,GAC9CI,EAAqB,QAAuBV,EAASW,gBAAgB,CACzEF,QAAiH,OAAtGV,QAAqD,MAAtBC,EAASY,eAAoB,EAASZ,EAASY,UAAUH,MAAqBV,EAAgCU,EAAUA,EAAQI,sBAAyD,MAA/Bb,EAASc,wBAA6B,EAASd,EAASc,mBAAmBZ,EAAShB,WACxRkB,WACAC,eACAF,cAEIxB,EAA0B,aAAnB2B,EAAgC,CAC3CrD,IACAC,IACA0B,MAAOqB,EAAMf,SAASN,MACtBC,OAAQoB,EAAMf,SAASL,QACrBoB,EAAMhB,UACJ8B,QAAkD,MAA5Bf,EAASgB,qBAA0B,EAAShB,EAASgB,gBAAgBd,EAAShB,WACpG+B,QAA4C,MAAtBjB,EAASY,eAAoB,EAASZ,EAASY,UAAUG,WAA+C,MAArBf,EAASkB,cAAmB,EAASlB,EAASkB,SAASH,KAGlK,CACF9D,EAAG,EACHC,EAAG,GAECiE,EAAoB,EAAiBnB,EAASoB,4DAA8DpB,EAASoB,sDAAsD,CAC/KlB,WACAvB,OACAoC,eACAZ,aACGxB,GACL,MAAO,CACLpB,KAAMmD,EAAmBnD,IAAM4D,EAAkB5D,IAAMiD,EAAcjD,KAAO0D,EAAY/D,EACxFI,QAAS6D,EAAkB7D,OAASoD,EAAmBpD,OAASkD,EAAclD,QAAU2D,EAAY/D,EACpGE,MAAOsD,EAAmBtD,KAAO+D,EAAkB/D,KAAOoD,EAAcpD,MAAQ6D,EAAYhE,EAC5FI,OAAQ8D,EAAkB9D,MAAQqD,EAAmBrD,MAAQmD,EAAcnD,OAAS4D,EAAYhE,EAEpG,CAyTA,SAASoE,EAAeC,EAAU3C,GAChC,MAAO,CACLpB,IAAK+D,EAAS/D,IAAMoB,EAAKE,OACzBxB,MAAOiE,EAASjE,MAAQsB,EAAKC,MAC7BtB,OAAQgE,EAAShE,OAASqB,EAAKE,OAC/BzB,KAAMkE,EAASlE,KAAOuB,EAAKC,MAE/B,CACA,SAAS2C,EAAsBD,GAC7B,OAAO7E,EAAM+E,MAAKhD,GAAQ8C,EAAS9C,IAAS,GAC9C,CCxhBA,SAASiD,IACP,MAAyB,oBAAXC,MAChB,CACA,SAASC,EAAYC,GACnB,OAAIC,EAAOD,IACDA,EAAKE,UAAY,IAAIC,cAKxB,WACT,CACA,SAASC,EAAUJ,GACjB,IAAIK,EACJ,OAAgB,MAARL,GAA8D,OAA7CK,EAAsBL,EAAKM,oBAAyB,EAASD,EAAoBE,cAAgBT,MAC5H,CACA,SAAS,EAAmBE,GAC1B,IAAI7C,EACJ,OAA0F,OAAlFA,GAAQ8C,EAAOD,GAAQA,EAAKM,cAAgBN,EAAKQ,WAAaV,OAAOU,eAAoB,EAASrD,EAAKsD,eACjH,CACA,SAASR,EAAOjE,GACd,QAAK6D,MAGE7D,aAAiB0E,MAAQ1E,aAAiBoE,EAAUpE,GAAO0E,KACpE,CACA,SAAS1B,EAAUhD,GACjB,QAAK6D,MAGE7D,aAAiB2E,SAAW3E,aAAiBoE,EAAUpE,GAAO2E,QACvE,CACA,SAASC,EAAc5E,GACrB,QAAK6D,MAGE7D,aAAiB6E,aAAe7E,aAAiBoE,EAAUpE,GAAO6E,YAC3E,CACA,SAASC,EAAa9E,GACpB,SAAK6D,KAAqC,oBAAfkB,cAGpB/E,aAAiB+E,YAAc/E,aAAiBoE,EAAUpE,GAAO+E,WAC1E,CACA,SAASC,EAAkBnC,GACzB,MAAM,SACJa,EAAQ,UACRuB,EAAS,UACTC,EAAS,QACTC,GACEC,EAAiBvC,GACrB,MAAO,kCAAkCwC,KAAK3B,EAAWwB,EAAYD,KAAe,CAAC,SAAU,YAAY1E,SAAS4E,EACtH,CACA,SAASG,EAAezC,GACtB,MAAO,CAAC,QAAS,KAAM,MAAMtC,SAASwD,EAAYlB,GACpD,CACA,SAAS0C,EAAW1C,GAClB,MAAO,CAAC,gBAAiB,UAAUe,MAAK4B,IACtC,IACE,OAAO3C,EAAQ4C,QAAQD,EACzB,CAAE,MAAOE,GACP,OAAO,CACT,IAEJ,CACA,SAASC,EAAkBC,GACzB,MAAMC,EAASC,IACTC,EAAM/C,EAAU4C,GAAgBR,EAAiBQ,GAAgBA,EAIvE,MAAO,CAAC,YAAa,YAAa,QAAS,SAAU,eAAehC,MAAK5D,KAAS+F,EAAI/F,IAAwB,SAAf+F,EAAI/F,QAA+B+F,EAAIC,eAAsC,WAAtBD,EAAIC,gBAAwCH,KAAWE,EAAIE,gBAAwC,SAAvBF,EAAIE,iBAAuCJ,KAAWE,EAAIG,QAAwB,SAAfH,EAAIG,QAA8B,CAAC,YAAa,YAAa,QAAS,SAAU,cAAe,UAAUtC,MAAK5D,IAAU+F,EAAII,YAAc,IAAI5F,SAASP,MAAW,CAAC,QAAS,SAAU,SAAU,WAAW4D,MAAK5D,IAAU+F,EAAIK,SAAW,IAAI7F,SAASP,IAC7hB,CAaA,SAAS8F,IACP,QAAmB,oBAARO,MAAwBA,IAAIC,WAChCD,IAAIC,SAAS,0BAA2B,OACjD,CACA,SAASC,EAAsBvC,GAC7B,MAAO,CAAC,OAAQ,OAAQ,aAAazD,SAASwD,EAAYC,GAC5D,CACA,SAASoB,EAAiBvC,GACxB,OAAOuB,EAAUvB,GAASuC,iBAAiBvC,EAC7C,CACA,SAAS2D,EAAc3D,GACrB,OAAIG,EAAUH,GACL,CACL4D,WAAY5D,EAAQ4D,WACpBC,UAAW7D,EAAQ6D,WAGhB,CACLD,WAAY5D,EAAQ8D,QACpBD,UAAW7D,EAAQ+D,QAEvB,CACA,SAASC,EAAc7C,GACrB,GAA0B,SAAtBD,EAAYC,GACd,OAAOA,EAET,MAAM8C,EAEN9C,EAAK+C,cAEL/C,EAAKgD,YAELlC,EAAad,IAASA,EAAKiD,MAE3B,EAAmBjD,GACnB,OAAOc,EAAagC,GAAUA,EAAOG,KAAOH,CAC9C,CACA,SAASI,EAA2BlD,GAClC,MAAMgD,EAAaH,EAAc7C,GACjC,OAAIuC,EAAsBS,GACjBhD,EAAKM,cAAgBN,EAAKM,cAAc6C,KAAOnD,EAAKmD,KAEzDvC,EAAcoC,IAAehC,EAAkBgC,GAC1CA,EAEFE,EAA2BF,EACpC,CACA,SAAS,EAAqBhD,EAAMoD,EAAMC,GACxC,IAAIC,OACS,IAATF,IACFA,EAAO,SAEe,IAApBC,IACFA,GAAkB,GAEpB,MAAME,EAAqBL,EAA2BlD,GAChDwD,EAASD,KAAuE,OAA9CD,EAAuBtD,EAAKM,oBAAyB,EAASgD,EAAqBH,MACrHM,EAAMrD,EAAUmD,GACtB,GAAIC,EAAQ,CACV,MAAME,EAAeC,EAAgBF,GACrC,OAAOL,EAAK/J,OAAOoK,EAAKA,EAAIG,gBAAkB,GAAI5C,EAAkBuC,GAAsBA,EAAqB,GAAIG,GAAgBL,EAAkB,EAAqBK,GAAgB,GAC5L,CACA,OAAON,EAAK/J,OAAOkK,EAAoB,EAAqBA,EAAoB,GAAIF,GACtF,CACA,SAASM,EAAgBF,GACvB,OAAOA,EAAII,QAAUC,OAAOC,eAAeN,EAAII,QAAUJ,EAAIC,aAAe,IAC9E,CClJA,SAASM,EAAiBnF,GACxB,MAAMkD,EAAMX,EAAiBvC,GAG7B,IAAI7B,EAAQiH,WAAWlC,EAAI/E,QAAU,EACjCC,EAASgH,WAAWlC,EAAI9E,SAAW,EACvC,MAAMiH,EAAYtD,EAAc/B,GAC1BsF,EAAcD,EAAYrF,EAAQsF,YAAcnH,EAChDoH,EAAeF,EAAYrF,EAAQuF,aAAenH,EAClDoH,EAAiBpJ,EAAM+B,KAAWmH,GAAelJ,EAAMgC,KAAYmH,EAKzE,OAJIC,IACFrH,EAAQmH,EACRlH,EAASmH,GAEJ,CACLpH,QACAC,SACAqH,EAAGD,EAEP,CAEA,SAASE,EAAc1F,GACrB,OAAQG,EAAUH,GAAoCA,EAAzBA,EAAQI,cACvC,CAEA,SAASK,EAAST,GAChB,MAAM2F,EAAaD,EAAc1F,GACjC,IAAK+B,EAAc4D,GACjB,OAAOtJ,EAAa,GAEtB,MAAM6B,EAAOyH,EAAWC,yBAClB,MACJzH,EAAK,OACLC,EAAM,EACNqH,GACEN,EAAiBQ,GACrB,IAAInJ,GAAKiJ,EAAIrJ,EAAM8B,EAAKC,OAASD,EAAKC,OAASA,EAC3C1B,GAAKgJ,EAAIrJ,EAAM8B,EAAKE,QAAUF,EAAKE,QAAUA,EAUjD,OANK5B,GAAMqJ,OAAOC,SAAStJ,KACzBA,EAAI,GAEDC,GAAMoJ,OAAOC,SAASrJ,KACzBA,EAAI,GAEC,CACLD,IACAC,IAEJ,CAEA,MAAMsJ,EAAyB1J,EAAa,GAC5C,SAAS2J,EAAiBhG,GACxB,MAAM4E,EAAMrD,EAAUvB,GACtB,OAAKiD,KAAe2B,EAAIG,eAGjB,CACLvI,EAAGoI,EAAIG,eAAekB,WACtBxJ,EAAGmI,EAAIG,eAAemB,WAJfH,CAMX,CAWA,SAASH,EAAsB5F,EAASmG,EAAcC,EAAiB9F,QAChD,IAAjB6F,IACFA,GAAe,QAEO,IAApBC,IACFA,GAAkB,GAEpB,MAAMC,EAAarG,EAAQ4F,wBACrBD,EAAaD,EAAc1F,GACjC,IAAIsG,EAAQjK,EAAa,GACrB8J,IACE7F,EACEH,EAAUG,KACZgG,EAAQ7F,EAASH,IAGnBgG,EAAQ7F,EAAST,IAGrB,MAAMuG,EA7BR,SAAgCvG,EAASwG,EAASC,GAIhD,YAHgB,IAAZD,IACFA,GAAU,MAEPC,GAAwBD,GAAWC,IAAyBlF,EAAUvB,KAGpEwG,CACT,CAqBwBE,CAAuBf,EAAYS,EAAiB9F,GAAgB0F,EAAiBL,GAActJ,EAAa,GACtI,IAAIG,GAAK6J,EAAW1J,KAAO4J,EAAc/J,GAAK8J,EAAM9J,EAChDC,GAAK4J,EAAWvJ,IAAMyJ,EAAc9J,GAAK6J,EAAM7J,EAC/C0B,EAAQkI,EAAWlI,MAAQmI,EAAM9J,EACjC4B,EAASiI,EAAWjI,OAASkI,EAAM7J,EACvC,GAAIkJ,EAAY,CACd,MAAMf,EAAMrD,EAAUoE,GAChBgB,EAAYrG,GAAgBH,EAAUG,GAAgBiB,EAAUjB,GAAgBA,EACtF,IAAIsG,EAAahC,EACbiC,EAAgB/B,EAAgB8B,GACpC,KAAOC,GAAiBvG,GAAgBqG,IAAcC,GAAY,CAChE,MAAME,EAAcrG,EAASoG,GACvBE,EAAaF,EAAcjB,wBAC3B1C,EAAMX,EAAiBsE,GACvBlK,EAAOoK,EAAWpK,MAAQkK,EAAcG,WAAa5B,WAAWlC,EAAI+D,cAAgBH,EAAYtK,EAChGM,EAAMiK,EAAWjK,KAAO+J,EAAcK,UAAY9B,WAAWlC,EAAIiE,aAAeL,EAAYrK,EAClGD,GAAKsK,EAAYtK,EACjBC,GAAKqK,EAAYrK,EACjB0B,GAAS2I,EAAYtK,EACrB4B,GAAU0I,EAAYrK,EACtBD,GAAKG,EACLF,GAAKK,EACL8J,EAAarF,EAAUsF,GACvBA,EAAgB/B,EAAgB8B,EAClC,CACF,CACA,OAAO,EAAiB,CACtBzI,QACAC,SACA5B,IACAC,KAEJ,CAIA,SAAS2K,EAAoBpH,EAAS9B,GACpC,MAAMmJ,EAAa1D,EAAc3D,GAAS4D,WAC1C,OAAK1F,EAGEA,EAAKvB,KAAO0K,EAFVzB,EAAsB,EAAmB5F,IAAUrD,KAAO0K,CAGrE,CAEA,SAASC,EAAc1F,EAAiB2F,EAAQC,QACrB,IAArBA,IACFA,GAAmB,GAErB,MAAMC,EAAW7F,EAAgBgE,wBAKjC,MAAO,CACLpJ,EALQiL,EAAS9K,KAAO4K,EAAO3D,YAAc4D,EAAmB,EAElEJ,EAAoBxF,EAAiB6F,IAInChL,EAHQgL,EAAS3K,IAAMyK,EAAO1D,UAKlC,CA6GA,SAAS6D,GAAkC1H,EAAS2H,EAAkBjI,GACpE,IAAIxB,EACJ,GAAyB,aAArByJ,EACFzJ,EA7CJ,SAAyB8B,EAASN,GAChC,MAAMkF,EAAMrD,EAAUvB,GAChB4H,EAAO,EAAmB5H,GAC1B+E,EAAiBH,EAAIG,eAC3B,IAAI5G,EAAQyJ,EAAKC,YACbzJ,EAASwJ,EAAKE,aACdtL,EAAI,EACJC,EAAI,EACR,GAAIsI,EAAgB,CAClB5G,EAAQ4G,EAAe5G,MACvBC,EAAS2G,EAAe3G,OACxB,MAAM2J,EAAsB9E,MACvB8E,GAAuBA,GAAoC,UAAbrI,KACjDlD,EAAIuI,EAAekB,WACnBxJ,EAAIsI,EAAemB,UAEvB,CACA,MAAO,CACL/H,QACAC,SACA5B,IACAC,IAEJ,CAsBWuL,CAAgBhI,EAASN,QAC3B,GAAyB,aAArBiI,EACTzJ,EAlEJ,SAAyB8B,GACvB,MAAM4H,EAAO,EAAmB5H,GAC1BuH,EAAS5D,EAAc3D,GACvBsE,EAAOtE,EAAQyB,cAAc6C,KAC7BnG,EAAQ,EAAIyJ,EAAKK,YAAaL,EAAKC,YAAavD,EAAK2D,YAAa3D,EAAKuD,aACvEzJ,EAAS,EAAIwJ,EAAKM,aAAcN,EAAKE,aAAcxD,EAAK4D,aAAc5D,EAAKwD,cACjF,IAAItL,GAAK+K,EAAO3D,WAAawD,EAAoBpH,GACjD,MAAMvD,GAAK8K,EAAO1D,UAIlB,MAHyC,QAArCtB,EAAiB+B,GAAM6D,YACzB3L,GAAK,EAAIoL,EAAKC,YAAavD,EAAKuD,aAAe1J,GAE1C,CACLA,QACAC,SACA5B,IACAC,IAEJ,CAiDW2L,CAAgB,EAAmBpI,SACrC,GAAIG,EAAUwH,GACnBzJ,EAvBJ,SAAoC8B,EAASN,GAC3C,MAAM2G,EAAaT,EAAsB5F,GAAS,EAAmB,UAAbN,GAClD5C,EAAMuJ,EAAWvJ,IAAMkD,EAAQkH,UAC/BvK,EAAO0J,EAAW1J,KAAOqD,EAAQgH,WACjCV,EAAQvE,EAAc/B,GAAWS,EAAST,GAAW3D,EAAa,GAKxE,MAAO,CACL8B,MALY6B,EAAQ6H,YAAcvB,EAAM9J,EAMxC4B,OALa4B,EAAQ8H,aAAexB,EAAM7J,EAM1CD,EALQG,EAAO2J,EAAM9J,EAMrBC,EALQK,EAAMwJ,EAAM7J,EAOxB,CAQW4L,CAA2BV,EAAkBjI,OAC/C,CACL,MAAM6G,EAAgBP,EAAiBhG,GACvC9B,EAAO,CACL1B,EAAGmL,EAAiBnL,EAAI+J,EAAc/J,EACtCC,EAAGkL,EAAiBlL,EAAI8J,EAAc9J,EACtC0B,MAAOwJ,EAAiBxJ,MACxBC,OAAQuJ,EAAiBvJ,OAE7B,CACA,OAAO,EAAiBF,EAC1B,CACA,SAASoK,GAAyBtI,EAASuI,GACzC,MAAMpE,EAAaH,EAAchE,GACjC,QAAImE,IAAeoE,IAAapI,EAAUgE,IAAeT,EAAsBS,MAG9B,UAA1C5B,EAAiB4B,GAAYqE,UAAwBF,GAAyBnE,EAAYoE,GACnG,CA2EA,SAASE,GAA8BzI,EAASM,EAAcZ,GAC5D,MAAMgJ,EAA0B3G,EAAczB,GACxCsB,EAAkB,EAAmBtB,GACrCkG,EAAuB,UAAb9G,EACVxB,EAAO0H,EAAsB5F,GAAS,EAAMwG,EAASlG,GAC3D,IAAIiH,EAAS,CACX3D,WAAY,EACZC,UAAW,GAEb,MAAM8E,EAAUtM,EAAa,GAC7B,GAAIqM,IAA4BA,IAA4BlC,EAI1D,IAHkC,SAA9BtF,EAAYZ,IAA4B6B,EAAkBP,MAC5D2F,EAAS5D,EAAcrD,IAErBoI,EAAyB,CAC3B,MAAME,EAAahD,EAAsBtF,GAAc,EAAMkG,EAASlG,GACtEqI,EAAQnM,EAAIoM,EAAWpM,EAAI8D,EAAa0G,WACxC2B,EAAQlM,EAAImM,EAAWnM,EAAI6D,EAAa4G,SAC1C,MAAWtF,IAGT+G,EAAQnM,EAAI4K,EAAoBxF,IAGpC,MAAMiH,GAAajH,GAAoB8G,GAA4BlC,EAAmDnK,EAAa,GAAtDiL,EAAc1F,EAAiB2F,GAG5G,MAAO,CACL/K,EAHQ0B,EAAKvB,KAAO4K,EAAO3D,WAAa+E,EAAQnM,EAAIqM,EAAWrM,EAI/DC,EAHQyB,EAAKpB,IAAMyK,EAAO1D,UAAY8E,EAAQlM,EAAIoM,EAAWpM,EAI7D0B,MAAOD,EAAKC,MACZC,OAAQF,EAAKE,OAEjB,CAEA,SAAS0K,GAAmB9I,GAC1B,MAA8C,WAAvCuC,EAAiBvC,GAASwI,QACnC,CAEA,SAASO,GAAoB/I,EAASgJ,GACpC,IAAKjH,EAAc/B,IAAmD,UAAvCuC,EAAiBvC,GAASwI,SACvD,OAAO,KAET,GAAIQ,EACF,OAAOA,EAAShJ,GAElB,IAAIiJ,EAAkBjJ,EAAQM,aAS9B,OAHI,EAAmBN,KAAaiJ,IAClCA,EAAkBA,EAAgBxH,cAAc6C,MAE3C2E,CACT,CAIA,SAAS1I,GAAgBP,EAASgJ,GAChC,MAAMpE,EAAMrD,EAAUvB,GACtB,GAAI0C,EAAW1C,GACb,OAAO4E,EAET,IAAK7C,EAAc/B,GAAU,CAC3B,IAAIkJ,EAAkBlF,EAAchE,GACpC,KAAOkJ,IAAoBxF,EAAsBwF,IAAkB,CACjE,GAAI/I,EAAU+I,KAAqBJ,GAAmBI,GACpD,OAAOA,EAETA,EAAkBlF,EAAckF,EAClC,CACA,OAAOtE,CACT,CACA,IAAItE,EAAeyI,GAAoB/I,EAASgJ,GAChD,KAAO1I,GAAgBmC,EAAenC,IAAiBwI,GAAmBxI,IACxEA,EAAeyI,GAAoBzI,EAAc0I,GAEnD,OAAI1I,GAAgBoD,EAAsBpD,IAAiBwI,GAAmBxI,KAAkBwC,EAAkBxC,GACzGsE,EAEFtE,GDrXT,SAA4BN,GAC1B,IAAImJ,EAAcnF,EAAchE,GAChC,KAAO+B,EAAcoH,KAAiBzF,EAAsByF,IAAc,CACxE,GAAIrG,EAAkBqG,GACpB,OAAOA,EACF,GAAIzG,EAAWyG,GACpB,OAAO,KAETA,EAAcnF,EAAcmF,EAC9B,CACA,OAAO,IACT,CC0WyBC,CAAmBpJ,IAAY4E,CACxD,CAqBA,MAAMrF,GAAW,CACfoB,sDAxTF,SAA+DrC,GAC7D,IAAI,SACFmB,EAAQ,KACRvB,EAAI,aACJoC,EAAY,SACZZ,GACEpB,EACJ,MAAMkI,EAAuB,UAAb9G,EACVkC,EAAkB,EAAmBtB,GACrC+I,IAAW5J,GAAWiD,EAAWjD,EAAShB,UAChD,GAAI6B,IAAiBsB,GAAmByH,GAAY7C,EAClD,OAAOtI,EAET,IAAIqJ,EAAS,CACX3D,WAAY,EACZC,UAAW,GAETyC,EAAQjK,EAAa,GACzB,MAAMsM,EAAUtM,EAAa,GACvBqM,EAA0B3G,EAAczB,GAC9C,IAAIoI,IAA4BA,IAA4BlC,MACxB,SAA9BtF,EAAYZ,IAA4B6B,EAAkBP,MAC5D2F,EAAS5D,EAAcrD,IAErByB,EAAczB,IAAe,CAC/B,MAAMsI,EAAahD,EAAsBtF,GACzCgG,EAAQ7F,EAASH,GACjBqI,EAAQnM,EAAIoM,EAAWpM,EAAI8D,EAAa0G,WACxC2B,EAAQlM,EAAImM,EAAWnM,EAAI6D,EAAa4G,SAC1C,CAEF,MAAM2B,GAAajH,GAAoB8G,GAA4BlC,EAAyDnK,EAAa,GAA5DiL,EAAc1F,EAAiB2F,GAAQ,GACpH,MAAO,CACLpJ,MAAOD,EAAKC,MAAQmI,EAAM9J,EAC1B4B,OAAQF,EAAKE,OAASkI,EAAM7J,EAC5BD,EAAG0B,EAAK1B,EAAI8J,EAAM9J,EAAI+K,EAAO3D,WAAa0C,EAAM9J,EAAImM,EAAQnM,EAAIqM,EAAWrM,EAC3EC,EAAGyB,EAAKzB,EAAI6J,EAAM7J,EAAI8K,EAAO1D,UAAYyC,EAAM7J,EAAIkM,EAAQlM,EAAIoM,EAAWpM,EAE9E,EAmRE4D,mBAAkB,EAClBH,gBAhJF,SAAyB5B,GACvB,IAAI,QACF0B,EAAO,SACPL,EAAQ,aACRC,EAAY,SACZF,GACEpB,EACJ,MACMgL,EAAoB,IADoB,sBAAb3J,EAAmC+C,EAAW1C,GAAW,GAxC5F,SAAqCA,EAASuJ,GAC5C,MAAMC,EAAeD,EAAME,IAAIzJ,GAC/B,GAAIwJ,EACF,OAAOA,EAET,IAAIvF,EAAS,EAAqBjE,EAAS,IAAI,GAAOqD,QAAOqG,GAAMvJ,EAAUuJ,IAA2B,SAApBxI,EAAYwI,KAC5FC,EAAsC,KAC1C,MAAMC,EAAwD,UAAvCrH,EAAiBvC,GAASwI,SACjD,IAAIW,EAAcS,EAAiB5F,EAAchE,GAAWA,EAG5D,KAAOG,EAAUgJ,KAAiBzF,EAAsByF,IAAc,CACpE,MAAMU,EAAgBtH,EAAiB4G,GACjCW,EAA0BhH,EAAkBqG,GAC7CW,GAAsD,UAA3BD,EAAcrB,WAC5CmB,EAAsC,OAEVC,GAAkBE,IAA4BH,GAAuCG,GAAsD,WAA3BD,EAAcrB,UAA2BmB,GAAuC,CAAC,WAAY,SAASjM,SAASiM,EAAoCnB,WAAarG,EAAkBgH,KAAiBW,GAA2BxB,GAAyBtI,EAASmJ,IAG5YlF,EAASA,EAAOZ,QAAO0G,GAAYA,IAAaZ,IAGhDQ,EAAsCE,EAExCV,EAAcnF,EAAcmF,EAC9B,CAEA,OADAI,EAAMS,IAAIhK,EAASiE,GACZA,CACT,CAWiGgG,CAA4BjK,EAASkK,KAAKC,IAAM,GAAG3P,OAAOmF,GACjGC,GAClDwK,EAAwBd,EAAkB,GAC1Ce,EAAef,EAAkBgB,QAAO,CAACC,EAAS5C,KACtD,MAAMzJ,EAAOwJ,GAAkC1H,EAAS2H,EAAkBjI,GAK1E,OAJA6K,EAAQzN,IAAM,EAAIoB,EAAKpB,IAAKyN,EAAQzN,KACpCyN,EAAQ3N,MAAQ,EAAIsB,EAAKtB,MAAO2N,EAAQ3N,OACxC2N,EAAQ1N,OAAS,EAAIqB,EAAKrB,OAAQ0N,EAAQ1N,QAC1C0N,EAAQ5N,KAAO,EAAIuB,EAAKvB,KAAM4N,EAAQ5N,MAC/B4N,CAAO,GACb7C,GAAkC1H,EAASoK,EAAuB1K,IACrE,MAAO,CACLvB,MAAOkM,EAAazN,MAAQyN,EAAa1N,KACzCyB,OAAQiM,EAAaxN,OAASwN,EAAavN,IAC3CN,EAAG6N,EAAa1N,KAChBF,EAAG4N,EAAavN,IAEpB,EAyHEyD,mBACAiK,gBAxBsBtL,eAAgBuL,GACtC,MAAMC,EAAoBR,KAAK3J,iBAAmBA,GAC5CoK,EAAkBT,KAAKU,cACvBC,QAA2BF,EAAgBF,EAAKhM,UACtD,MAAO,CACLD,UAAWiK,GAA8BgC,EAAKjM,gBAAiBkM,EAAkBD,EAAKhM,UAAWgM,EAAK/K,UACtGjB,SAAU,CACRjC,EAAG,EACHC,EAAG,EACH0B,MAAO0M,EAAmB1M,MAC1BC,OAAQyM,EAAmBzM,QAGjC,EAYE0M,eArRF,SAAwB9K,GACtB,OAAO+K,MAAMC,KAAKhL,EAAQ8K,iBAC5B,EAoREF,cA1HF,SAAuB5K,GACrB,MAAM,MACJ7B,EAAK,OACLC,GACE+G,EAAiBnF,GACrB,MAAO,CACL7B,QACAC,SAEJ,EAkHEqC,WACAN,UAAS,EACT8K,MAdF,SAAejL,GACb,MAA+C,QAAxCuC,EAAiBvC,GAASmI,SACnC,GAkMM,GAAiBhJ,EASjB,GF2GS,SAAUE,GAIvB,YAHgB,IAAZA,IACFA,EAAU,GAEL,CACL6L,KAAM,SACN7L,UACA,QAAM8L,CAAG/L,GACP,IAAIgM,EAAuBC,EAC3B,MAAM,EACJ7O,EAAC,EACDC,EAAC,UACDY,EAAS,eACTiO,GACElM,EACEmM,QA9DZrM,eAAoCE,EAAOC,GACzC,MAAM,UACJhC,EAAS,SACTkC,EAAQ,SACRE,GACEL,EACEb,QAA+B,MAAlBgB,EAAS0L,WAAgB,EAAS1L,EAAS0L,MAAMxL,EAAShB,WACvEV,EAAO,EAAQV,GACfQ,EAAY,EAAaR,GACzBwB,EAAwC,MAA3B,EAAYxB,GACzBmO,EAAgB,CAAC,OAAQ,OAAO9N,SAASK,IAAS,EAAI,EACtD0N,EAAiBlN,GAAOM,GAAc,EAAI,EAC1C6M,EAAW,EAASrM,EAASD,GAGnC,IAAI,SACFuM,EAAQ,UACRC,EAAS,cACTjN,GACsB,iBAAb+M,EAAwB,CACjCC,SAAUD,EACVE,UAAW,EACXjN,cAAe,MACb,CACFgN,SAAUD,EAASC,UAAY,EAC/BC,UAAWF,EAASE,WAAa,EACjCjN,cAAe+M,EAAS/M,eAK1B,OAHId,GAAsC,iBAAlBc,IACtBiN,EAA0B,QAAd/N,GAAuC,EAAjBc,EAAqBA,GAElDE,EAAa,CAClBrC,EAAGoP,EAAYH,EACfhP,EAAGkP,EAAWH,GACZ,CACFhP,EAAGmP,EAAWH,EACd/O,EAAGmP,EAAYH,EAEnB,CAwB+BI,CAAqBzM,EAAOC,GAIrD,OAAIhC,KAAkE,OAAlD+N,EAAwBE,EAAeQ,aAAkB,EAASV,EAAsB/N,YAAgE,OAAjDgO,EAAwBC,EAAeS,QAAkBV,EAAsBW,gBACjM,CAAC,EAEH,CACLxP,EAAGA,EAAI+O,EAAW/O,EAClBC,EAAGA,EAAI8O,EAAW9O,EAClBgO,KAAM,IACDc,EACHlO,aAGN,EAEJ,EE5HM,GFmIQ,SAAUgC,GAItB,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACL6L,KAAM,QACN7L,UACA,QAAM8L,CAAG/L,GACP,MAAM,EACJ5C,EAAC,EACDC,EAAC,UACDY,GACE+B,GAEFuM,SAAUM,GAAgB,EAC1BL,UAAWM,GAAiB,EAAK,QACjCC,EAAU,CACRhB,GAAI7M,IACF,IAAI,EACF9B,EAAC,EACDC,GACE6B,EACJ,MAAO,CACL9B,IACAC,IACD,MAGF2P,GACD,EAAS/M,EAASD,GAChBH,EAAS,CACbzC,IACAC,KAEIoE,QAAiB1B,EAAeC,EAAOgN,GACvCR,EAAY,EAAY,EAAQvO,IAChCsO,EAAWpO,EAAgBqO,GACjC,IAAIS,EAAgBpN,EAAO0M,GACvBW,EAAiBrN,EAAO2M,GAC5B,GAAIK,EAAe,CACjB,MACMM,EAAuB,MAAbZ,EAAmB,SAAW,QAG9CU,EAAgBnP,EAFJmP,EAAgBxL,EAFC,MAAb8K,EAAmB,MAAQ,QAIhBU,EADfA,EAAgBxL,EAAS0L,GAEvC,CACA,GAAIL,EAAgB,CAClB,MACMK,EAAwB,MAAdX,EAAoB,SAAW,QAG/CU,EAAiBpP,EAFLoP,EAAiBzL,EAFC,MAAd+K,EAAoB,MAAQ,QAIhBU,EADhBA,EAAiBzL,EAAS0L,GAExC,CACA,MAAMC,EAAgBL,EAAQhB,GAAG,IAC5B/L,EACH,CAACuM,GAAWU,EACZ,CAACT,GAAYU,IAEf,MAAO,IACFE,EACH/B,KAAM,CACJjO,EAAGgQ,EAAchQ,EAAIA,EACrBC,EAAG+P,EAAc/P,EAAIA,EACrBgQ,QAAS,CACP,CAACd,GAAWM,EACZ,CAACL,GAAYM,IAIrB,EAEJ,EElMM,GF9RO,SAAU7M,GAIrB,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACL6L,KAAM,OACN7L,UACA,QAAM8L,CAAG/L,GACP,IAAIiM,EAAuBqB,EAC3B,MAAM,UACJrP,EAAS,eACTiO,EAAc,MACd9L,EAAK,iBACLmN,EAAgB,SAChBpN,EAAQ,SACRE,GACEL,GAEFuM,SAAUM,GAAgB,EAC1BL,UAAWM,GAAiB,EAC5BU,mBAAoBC,EAA2B,iBAC/CC,EAAmB,UAAS,0BAC5BC,EAA4B,OAAM,cAClCC,GAAgB,KACbZ,GACD,EAAS/M,EAASD,GAMtB,GAAsD,OAAjDiM,EAAwBC,EAAeS,QAAkBV,EAAsBW,gBAClF,MAAO,CAAC,EAEV,MAAMjO,EAAO,EAAQV,GACf4P,EAAkB,EAAYN,GAC9BO,EAAkB,EAAQP,KAAsBA,EAChDpO,QAA+B,MAAlBgB,EAAS0L,WAAgB,EAAS1L,EAAS0L,MAAMxL,EAAShB,WACvEmO,EAAqBC,IAAgCK,IAAoBF,EAAgB,CAAClP,EAAqB6O,ID7X3H,SAA+BtP,GAC7B,MAAM8P,EAAoBrP,EAAqBT,GAC/C,MAAO,CAAC,EAA8BA,GAAY8P,EAAmB,EAA8BA,GACrG,CC0XgJC,CAAsBT,IAC1JU,EAA6D,SAA9BN,GAChCF,GAA+BQ,GAClCT,EAAmBU,QDxW3B,SAAmCjQ,EAAW2P,EAAe7E,EAAW5J,GACtE,MAAMV,EAAY,EAAaR,GAC/B,IAAIkH,EAnBN,SAAqBxG,EAAMwP,EAAShP,GAClC,MAAMiP,EAAK,CAAC,OAAQ,SACdC,EAAK,CAAC,QAAS,QACfC,EAAK,CAAC,MAAO,UACbC,EAAK,CAAC,SAAU,OACtB,OAAQ5P,GACN,IAAK,MACL,IAAK,SACH,OAAIQ,EAAYgP,EAAUE,EAAKD,EACxBD,EAAUC,EAAKC,EACxB,IAAK,OACL,IAAK,QACH,OAAOF,EAAUG,EAAKC,EACxB,QACE,MAAO,GAEb,CAGaC,CAAY,EAAQvQ,GAA0B,UAAd8K,EAAuB5J,GAOlE,OANIV,IACF0G,EAAOA,EAAKsJ,KAAI9P,GAAQA,EAAO,IAAMF,IACjCmP,IACFzI,EAAOA,EAAK/J,OAAO+J,EAAKsJ,IAAI,MAGzBtJ,CACT,CC8VmCuJ,CAA0BnB,EAAkBK,EAAeD,EAA2BxO,IAEnH,MAAMwP,EAAa,CAACpB,KAAqBC,GACnC/L,QAAiB1B,EAAeC,EAAOgN,GACvC4B,EAAY,GAClB,IAAIC,GAAiE,OAA/CvB,EAAuBpB,EAAe4C,WAAgB,EAASxB,EAAqBsB,YAAc,GAIxH,GAHI/B,GACF+B,EAAUV,KAAKzM,EAAS9C,IAEtBmO,EAAgB,CAClB,MAAMlQ,EDvZd,SAA2BqB,EAAWmC,EAAOjB,QAC/B,IAARA,IACFA,GAAM,GAER,MAAMV,EAAY,EAAaR,GACzBsB,EAAgBhB,EAAiBN,GACjC8Q,EAAS1Q,EAAckB,GAC7B,IAAIyP,EAAsC,MAAlBzP,EAAwBd,KAAeU,EAAM,MAAQ,SAAW,QAAU,OAAuB,UAAdV,EAAwB,SAAW,MAI9I,OAHI2B,EAAMhB,UAAU2P,GAAU3O,EAAMf,SAAS0P,KAC3CC,EAAoBtQ,EAAqBsQ,IAEpC,CAACA,EAAmBtQ,EAAqBsQ,GAClD,CC2YsB,CAAkB/Q,EAAWmC,EAAOjB,GAClDyP,EAAUV,KAAKzM,EAAS7E,EAAM,IAAK6E,EAAS7E,EAAM,IACpD,CAOA,GANAiS,EAAgB,IAAIA,EAAe,CACjC5Q,YACA2Q,eAIGA,EAAUK,OAAMtQ,GAAQA,GAAQ,IAAI,CACvC,IAAIuQ,EAAuBC,EAC3B,MAAMC,IAA+D,OAAhDF,EAAwBhD,EAAe4C,WAAgB,EAASI,EAAsBG,QAAU,GAAK,EACpHC,EAAgBX,EAAWS,GACjC,GAAIE,EAEF,MAAO,CACLjE,KAAM,CACJgE,MAAOD,EACPR,UAAWC,GAEbU,MAAO,CACLtR,UAAWqR,IAOjB,IAAIE,EAAgJ,OAA9HL,EAAwBN,EAAc5K,QAAOwL,GAAKA,EAAEb,UAAU,IAAM,IAAGc,MAAK,CAACC,EAAGC,IAAMD,EAAEf,UAAU,GAAKgB,EAAEhB,UAAU,KAAI,SAAc,EAASO,EAAsBlR,UAG1L,IAAKuR,EACH,OAAQ9B,GACN,IAAK,UACH,CACE,IAAImC,EACJ,MAAM5R,EASmJ,OATtI4R,EAAyBhB,EAAc5K,QAAOwL,IAC/D,GAAIxB,EAA8B,CAChC,MAAM6B,EAAkB,EAAYL,EAAExR,WACtC,OAAO6R,IAAoBjC,GAGP,MAApBiC,CACF,CACA,OAAO,CAAI,IACVrB,KAAIgB,GAAK,CAACA,EAAExR,UAAWwR,EAAEb,UAAU3K,QAAOxC,GAAYA,EAAW,IAAGyJ,QAAO,CAAC6E,EAAKtO,IAAasO,EAAMtO,GAAU,MAAKiO,MAAK,CAACC,EAAGC,IAAMD,EAAE,GAAKC,EAAE,KAAI,SAAc,EAASC,EAAuB,GAC5L5R,IACFuR,EAAiBvR,GAEnB,KACF,CACF,IAAK,mBACHuR,EAAiBjC,EAIvB,GAAItP,IAAcuR,EAChB,MAAO,CACLD,MAAO,CACLtR,UAAWuR,GAInB,CACA,MAAO,CAAC,CACV,EAEJ,EEgLM,GFsQO,SAAUvP,GAIrB,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACL6L,KAAM,OACN7L,UACA,QAAM8L,CAAG/L,GACP,IAAIgQ,EAAuBC,EAC3B,MAAM,UACJhS,EAAS,MACTmC,EAAK,SACLD,EAAQ,SACRE,GACEL,GACE,MACJkQ,EAAQ,UACLlD,GACD,EAAS/M,EAASD,GAChByB,QAAiB1B,EAAeC,EAAOgN,GACvCrO,EAAO,EAAQV,GACfQ,EAAY,EAAaR,GACzBkS,EAAqC,MAA3B,EAAYlS,IACtB,MACJc,EAAK,OACLC,GACEoB,EAAMf,SACV,IAAI+Q,EACAC,EACS,QAAT1R,GAA2B,WAATA,GACpByR,EAAazR,EACb0R,EAAY5R,WAAyC,MAAlB0B,EAAS0L,WAAgB,EAAS1L,EAAS0L,MAAMxL,EAAShB,WAAc,QAAU,OAAS,OAAS,UAEvIgR,EAAY1R,EACZyR,EAA2B,QAAd3R,EAAsB,MAAQ,UAE7C,MAAM6R,EAAwBtR,EAASyC,EAAS/D,IAAM+D,EAAShE,OACzD8S,EAAuBxR,EAAQ0C,EAASlE,KAAOkE,EAASjE,MACxDgT,EAA0B,EAAIxR,EAASyC,EAAS2O,GAAaE,GAC7DG,EAAyB,EAAI1R,EAAQ0C,EAAS4O,GAAYE,GAC1DG,GAAW1Q,EAAMkM,eAAeyE,MACtC,IAAIC,EAAkBJ,EAClBK,EAAiBJ,EAOrB,GAN4D,OAAvDT,EAAwBhQ,EAAMkM,eAAeyE,QAAkBX,EAAsB3C,QAAQjQ,IAChGyT,EAAiBN,GAE0C,OAAxDN,EAAyBjQ,EAAMkM,eAAeyE,QAAkBV,EAAuB5C,QAAQhQ,IAClGuT,EAAkBN,GAEhBI,IAAYjS,EAAW,CACzB,MAAMqS,EAAO,EAAIrP,EAASlE,KAAM,GAC1BwT,EAAO,EAAItP,EAASjE,MAAO,GAC3BwT,EAAO,EAAIvP,EAAS/D,IAAK,GACzBuT,EAAO,EAAIxP,EAAShE,OAAQ,GAC9B0S,EACFU,EAAiB9R,EAAQ,GAAc,IAAT+R,GAAuB,IAATC,EAAaD,EAAOC,EAAO,EAAItP,EAASlE,KAAMkE,EAASjE,QAEnGoT,EAAkB5R,EAAS,GAAc,IAATgS,GAAuB,IAATC,EAAaD,EAAOC,EAAO,EAAIxP,EAAS/D,IAAK+D,EAAShE,QAExG,OACMyS,EAAM,IACPlQ,EACH6Q,iBACAD,oBAEF,MAAMM,QAAuB/Q,EAASqL,cAAcnL,EAAShB,UAC7D,OAAIN,IAAUmS,EAAenS,OAASC,IAAWkS,EAAelS,OACvD,CACLuQ,MAAO,CACLnP,OAAO,IAIN,CAAC,CACV,EAEJ,EE3UM,GFrKO,SAAUH,GAIrB,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACL6L,KAAM,OACN7L,UACA,QAAM8L,CAAG/L,GACP,MAAM,MACJI,GACEJ,GACE,SACJM,EAAW,qBACR0M,GACD,EAAS/M,EAASD,GACtB,OAAQM,GACN,IAAK,kBACH,CACE,MAIMiJ,EAAU/H,QAJOzB,EAAeC,EAAO,IACxCgN,EACHvM,eAAgB,cAEuBL,EAAMhB,WAC/C,MAAO,CACLiM,KAAM,CACJ8F,uBAAwB5H,EACxB6H,gBAAiB1P,EAAsB6H,IAG7C,CACF,IAAK,UACH,CACE,MAIMA,EAAU/H,QAJOzB,EAAeC,EAAO,IACxCgN,EACHtM,aAAa,IAE0BN,EAAMf,UAC/C,MAAO,CACLgM,KAAM,CACJgG,eAAgB9H,EAChB+H,QAAS5P,EAAsB6H,IAGrC,CACF,QAEI,MAAO,CAAC,EAGhB,EAEJ,EEyHM,GF9eQtJ,IAAW,CACvB6L,KAAM,QACN7L,UACA,QAAM8L,CAAG/L,GACP,MAAM,EACJ5C,EAAC,EACDC,EAAC,UACDY,EAAS,MACTmC,EAAK,SACLD,EAAQ,SACRE,EAAQ,eACR6L,GACElM,GAEE,QACJY,EAAO,QACPhC,EAAU,GACR,EAASqB,EAASD,IAAU,CAAC,EACjC,GAAe,MAAXY,EACF,MAAO,CAAC,EAEV,MAAMD,EAAgB,EAAiB/B,GACjCiB,EAAS,CACbzC,IACAC,KAEIe,EAAOG,EAAiBN,GACxB8Q,EAAS1Q,EAAcD,GACvBmT,QAAwBpR,EAASqL,cAAc5K,GAC/CuP,EAAmB,MAAT/R,EACVoT,EAAUrB,EAAU,MAAQ,OAC5BsB,EAAUtB,EAAU,SAAW,QAC/BuB,EAAavB,EAAU,eAAiB,cACxCwB,EAAUvR,EAAMhB,UAAU2P,GAAU3O,EAAMhB,UAAUhB,GAAQyB,EAAOzB,GAAQgC,EAAMf,SAAS0P,GAC1F6C,EAAY/R,EAAOzB,GAAQgC,EAAMhB,UAAUhB,GAC3CyT,QAAuD,MAA5B1R,EAASgB,qBAA0B,EAAShB,EAASgB,gBAAgBP,IACtG,IAAIkR,EAAaD,EAAoBA,EAAkBH,GAAc,EAGhEI,SAA6C,MAAtB3R,EAASY,eAAoB,EAASZ,EAASY,UAAU8Q,MACnFC,EAAazR,EAAShB,SAASqS,IAAetR,EAAMf,SAAS0P,IAE/D,MAAMgD,EAAoBJ,EAAU,EAAIC,EAAY,EAI9CI,EAAyBF,EAAa,EAAIP,EAAgBxC,GAAU,EAAI,EACxEkD,EAAa,EAAItR,EAAc6Q,GAAUQ,GACzCE,EAAa,EAAIvR,EAAc8Q,GAAUO,GAIzCG,EAAQF,EACRlV,EAAM+U,EAAaP,EAAgBxC,GAAUmD,EAC7CE,EAASN,EAAa,EAAIP,EAAgBxC,GAAU,EAAIgD,EACxDrF,EAAS5O,EAAMqU,EAAOC,EAAQrV,GAM9BsV,GAAmBnG,EAAeS,OAAoC,MAA3B,EAAa1O,IAAsBmU,IAAW1F,GAAUtM,EAAMhB,UAAU2P,GAAU,GAAKqD,EAASD,EAAQF,EAAaC,GAAcX,EAAgBxC,GAAU,EAAI,EAC5MnC,EAAkByF,EAAkBD,EAASD,EAAQC,EAASD,EAAQC,EAASrV,EAAM,EAC3F,MAAO,CACL,CAACqB,GAAOyB,EAAOzB,GAAQwO,EACvBvB,KAAM,CACJ,CAACjN,GAAOsO,EACR4F,aAAcF,EAAS1F,EAASE,KAC5ByF,GAAmB,CACrBzF,oBAGJ2C,MAAO8C,EAEX,IEgbI,GFoKa,SAAUpS,GAI3B,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACLA,UACA,EAAA8L,CAAG/L,GACD,MAAM,EACJ5C,EAAC,EACDC,EAAC,UACDY,EAAS,MACTmC,EAAK,eACL8L,GACElM,GACE,OACJ0M,EAAS,EACTH,SAAUM,GAAgB,EAC1BL,UAAWM,GAAiB,GAC1B,EAAS7M,EAASD,GAChBH,EAAS,CACbzC,IACAC,KAEImP,EAAY,EAAYvO,GACxBsO,EAAWpO,EAAgBqO,GACjC,IAAIS,EAAgBpN,EAAO0M,GACvBW,EAAiBrN,EAAO2M,GAC5B,MAAM+F,EAAY,EAAS7F,EAAQ1M,GAC7BwS,EAAsC,iBAAdD,EAAyB,CACrDhG,SAAUgG,EACV/F,UAAW,GACT,CACFD,SAAU,EACVC,UAAW,KACR+F,GAEL,GAAI1F,EAAe,CACjB,MAAM4F,EAAmB,MAAblG,EAAmB,SAAW,QACpCmG,EAAWtS,EAAMhB,UAAUmN,GAAYnM,EAAMf,SAASoT,GAAOD,EAAejG,SAC5EoG,EAAWvS,EAAMhB,UAAUmN,GAAYnM,EAAMhB,UAAUqT,GAAOD,EAAejG,SAC/EU,EAAgByF,EAClBzF,EAAgByF,EACPzF,EAAgB0F,IACzB1F,EAAgB0F,EAEpB,CACA,GAAI7F,EAAgB,CAClB,IAAId,EAAuB4G,EAC3B,MAAMH,EAAmB,MAAblG,EAAmB,QAAU,SACnCsG,EAAe,CAAC,MAAO,QAAQvU,SAAS,EAAQL,IAChDyU,EAAWtS,EAAMhB,UAAUoN,GAAapM,EAAMf,SAASoT,IAAQI,IAAmE,OAAlD7G,EAAwBE,EAAeQ,aAAkB,EAASV,EAAsBQ,KAAmB,IAAMqG,EAAe,EAAIL,EAAehG,WACnOmG,EAAWvS,EAAMhB,UAAUoN,GAAapM,EAAMhB,UAAUqT,IAAQI,EAAe,GAAyD,OAAnDD,EAAyB1G,EAAeQ,aAAkB,EAASkG,EAAuBpG,KAAe,IAAMqG,EAAeL,EAAehG,UAAY,GAChPU,EAAiBwF,EACnBxF,EAAiBwF,EACRxF,EAAiByF,IAC1BzF,EAAiByF,EAErB,CACA,MAAO,CACL,CAACpG,GAAWU,EACZ,CAACT,GAAYU,EAEjB,EAEJ,EE9NM,GAAkB,CAAC9N,EAAWC,EAAUY,KAI5C,MAAMkK,EAAQ,IAAI2I,IACZC,EAAgB,CACpB5S,eACGF,GAEC+S,EAAoB,IACrBD,EAAc5S,SACjB4K,GAAIZ,GAEN,MFvqBsBrK,OAAOV,EAAWC,EAAU4T,KAClD,MAAM,UACJhV,EAAY,SAAQ,SACpBqC,EAAW,WAAU,WACrB4S,EAAa,GAAE,SACf/S,GACE8S,EACEE,EAAkBD,EAAWjP,OAAOmP,SACpCjU,QAA+B,MAAlBgB,EAAS0L,WAAgB,EAAS1L,EAAS0L,MAAMxM,IACpE,IAAIe,QAAcD,EAASiL,gBAAgB,CACzChM,YACAC,WACAiB,cAEE,EACFlD,EAAC,EACDC,GACE4B,EAA2BmB,EAAOnC,EAAWkB,GAC7CkU,EAAoBpV,EACpBiO,EAAiB,CAAC,EAClBoH,EAAa,EACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAgBpE,OAAQwE,IAAK,CAC/C,MAAM,KACJzH,EAAI,GACJC,GACEoH,EAAgBI,IAElBnW,EAAGoW,EACHnW,EAAGoW,EAAK,KACRpI,EAAI,MACJkE,SACQxD,EAAG,CACX3O,IACAC,IACAkQ,iBAAkBtP,EAClBA,UAAWoV,EACX/S,WACA4L,iBACA9L,QACAD,WACAE,SAAU,CACRjB,YACAC,cAGJjC,EAAa,MAAToW,EAAgBA,EAAQpW,EAC5BC,EAAa,MAAToW,EAAgBA,EAAQpW,EAC5B6O,EAAiB,IACZA,EACH,CAACJ,GAAO,IACHI,EAAeJ,MACfT,IAGHkE,GAAS+D,GAAc,KACzBA,IACqB,iBAAV/D,IACLA,EAAMtR,YACRoV,EAAoB9D,EAAMtR,WAExBsR,EAAMnP,QACRA,GAAwB,IAAhBmP,EAAMnP,YAAuBD,EAASiL,gBAAgB,CAC5DhM,YACAC,WACAiB,aACGiP,EAAMnP,SAGXhD,IACAC,KACE4B,EAA2BmB,EAAOiT,EAAmBlU,KAE3DoU,GAAK,EAET,CACA,MAAO,CACLnW,IACAC,IACAY,UAAWoV,EACX/S,WACA4L,iBACD,EEslBMwH,CAAkBtU,EAAWC,EAAU,IACzC0T,EACH5S,SAAU6S,GACV,C","sources":["webpack://office-addin-taskpane-react-js/./node_modules/use-disposable/lib/index.js","webpack://office-addin-taskpane-react-js/./node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@floating-ui/core/dist/floating-ui.core.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs"],"sourcesContent":["// src/useIsStrictMode.ts\nimport * as React from \"react\";\nvar getCurrentOwner = () => {\n  try {\n    return React[\"\".concat(\n      \"__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE\"\n    )].A.getOwner();\n  } catch {\n  }\n  try {\n    return React[\"\".concat(\"__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\")].ReactCurrentOwner.current;\n  } catch {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.error(\n        \"use-disposable: failed to get current fiber, please report this bug to maintainers\"\n      );\n    }\n  }\n};\nvar REACT_STRICT_MODE_TYPE = /* @__PURE__ */ Symbol.for(\"react.strict_mode\");\nvar useIsStrictMode = () => {\n  if (process.env.NODE_ENV === \"production\") {\n    return false;\n  }\n  const isStrictMode = React.useRef(void 0);\n  const reactMajorVersion = React.useMemo(() => {\n    return Number(React.version.split(\".\")[0]);\n  }, [React.version]);\n  if (isNaN(reactMajorVersion) || reactMajorVersion < 18) {\n    return false;\n  }\n  if (isStrictMode.current === void 0) {\n    let currentOwner = getCurrentOwner();\n    while (currentOwner && currentOwner.return) {\n      currentOwner = currentOwner.return;\n      if (currentOwner.type === REACT_STRICT_MODE_TYPE || currentOwner.elementType === REACT_STRICT_MODE_TYPE) {\n        isStrictMode.current = true;\n      }\n    }\n  }\n  return !!isStrictMode.current;\n};\n\n// src/useDisposable.ts\nimport * as React4 from \"react\";\n\n// src/useStrictEffect.ts\nimport * as React2 from \"react\";\nvar effectSet = /* @__PURE__ */ new WeakSet();\nfunction useStrictEffect(effect, deps) {\n  const currentOwner = getCurrentOwner();\n  React2.useEffect(() => {\n    if (!effectSet.has(currentOwner)) {\n      effectSet.add(currentOwner);\n      effect();\n      return;\n    }\n    const dispose = effect();\n    return dispose;\n  }, deps);\n}\n\n// src/useStrictMemo.ts\nimport * as React3 from \"react\";\nvar memoSet = /* @__PURE__ */ new WeakSet();\nfunction useStrictMemo(factory, deps) {\n  return React3.useMemo(() => {\n    const currentOwner = getCurrentOwner();\n    if (!memoSet.has(currentOwner)) {\n      memoSet.add(currentOwner);\n      return null;\n    }\n    return factory();\n  }, deps);\n}\n\n// src/useDisposable.ts\nfunction useDisposable(factory, deps) {\n  var _a;\n  const isStrictMode = useIsStrictMode() && process.env.NODE_ENV !== \"production\";\n  const useMemo4 = isStrictMode ? useStrictMemo : React4.useMemo;\n  const useEffect3 = isStrictMode ? useStrictEffect : React4.useEffect;\n  const [disposable, dispose] = (_a = useMemo4(() => factory(), deps)) != null ? _a : [\n    null,\n    () => null\n  ];\n  useEffect3(() => {\n    return dispose;\n  }, deps);\n  return disposable;\n}\nexport {\n  useDisposable,\n  useIsStrictMode\n};\n//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vc3JjL3VzZUlzU3RyaWN0TW9kZS50cyIsICIuLi9zcmMvdXNlRGlzcG9zYWJsZS50cyIsICIuLi9zcmMvdXNlU3RyaWN0RWZmZWN0LnRzIiwgIi4uL3NyYy91c2VTdHJpY3RNZW1vLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuLyoqXG4gKiBAcmV0dXJucyBDdXJyZW50IHJlYWN0IGZpYmVyIGJlaW5nIHJlbmRlcmVkXG4gKi9cbmV4cG9ydCBjb25zdCBnZXRDdXJyZW50T3duZXIgPSAoKSA9PiB7XG4gIC8vIE5vdGU6IFN0cmluZyBjb25jYXRlbmF0aW9uIGlzIHVzZWQgdG8gcHJldmVudCBidW5kbGVycyB0byBjb21wbGFpbiB3aXRoIG11bHRpcGxlIHZlcnNpb25zIG9mIFJlYWN0XG4gIHRyeSB7XG4gICAgLy8gUmVhY3QgMTlcbiAgICAvLyB1c2luZyByZWFjdCBpbnRlcm5hbHNcbiAgICByZXR1cm4gKFJlYWN0IGFzIGFueSlbXG4gICAgICBcIlwiLmNvbmNhdChcbiAgICAgICAgXCJfX0NMSUVOVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9XQVJOX1VTRVJTX1RIRVlfQ0FOTk9UX1VQR1JBREVcIixcbiAgICAgIClcbiAgICBdLkEuZ2V0T3duZXIoKTtcbiAgfSBjYXRjaCB7fVxuXG4gIHRyeSB7XG4gICAgLy8gUmVhY3QgPDE4XG4gICAgLy8gdXNpbmcgcmVhY3QgaW50ZXJuYWxzXG4gICAgcmV0dXJuIChSZWFjdCBhcyBhbnkpW1xuICAgICAgXCJcIi5jb25jYXQoXCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRFwiKVxuICAgIF0uUmVhY3RDdXJyZW50T3duZXIuY3VycmVudDtcbiAgfSBjYXRjaCB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgXCJ1c2UtZGlzcG9zYWJsZTogZmFpbGVkIHRvIGdldCBjdXJyZW50IGZpYmVyLCBwbGVhc2UgcmVwb3J0IHRoaXMgYnVnIHRvIG1haW50YWluZXJzXCIsXG4gICAgICApO1xuICAgIH1cbiAgfVxufTtcblxuY29uc3QgUkVBQ1RfU1RSSUNUX01PREVfVFlQRSA9IC8qI19fUFVSRV9fKi8gU3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpO1xuXG4vKipcbiAqIFRyYXZlcnNlcyB1cCB0aGUgUmVhY3QgZmliZXIgdHJlZSB0byBmaW5kIHRoZSBTdHJpY3RNb2RlIGNvbXBvbmVudC5cbiAqIE5vdGU6IFRoaXMgb25seSBkZXRlY3RzIHN0cmljdCBtb2RlIGZyb20gUmVhY3QgPj0gMThcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdHdnL3JlYWN0LTE4L2Rpc2N1c3Npb25zLzE5XG4gKiBAcmV0dXJucyBJZiBzdHJpY3QgbW9kZSBpcyBiZWluZyB1c2VkIGluIHRoZSBSZWFjdCB0cmVlXG4gKi9cbmV4cG9ydCBjb25zdCB1c2VJc1N0cmljdE1vZGUgPSAoKTogYm9vbGVhbiA9PiB7XG4gIC8vIFRoaXMgY2hlY2sgdmlvbGF0ZXMgUnVsZXMgb2YgSG9va3MsIGJ1dCBcInByb2Nlc3MuZW52Lk5PREVfRU5WXCIgZG9lcyBub3QgY2hhbmdlIGluIGJ1bmRsZVxuICAvLyBvciBkdXJpbmcgYXBwbGljYXRpb24gbGlmZWN5Y2xlXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBjb25zdCBpc1N0cmljdE1vZGUgPSBSZWFjdC51c2VSZWY8Ym9vbGVhbiB8IHVuZGVmaW5lZD4odW5kZWZpbmVkKTtcbiAgY29uc3QgcmVhY3RNYWpvclZlcnNpb24gPSBSZWFjdC51c2VNZW1vKCgpID0+IHtcbiAgICByZXR1cm4gTnVtYmVyKFJlYWN0LnZlcnNpb24uc3BsaXQoXCIuXCIpWzBdKTtcbiAgfSwgW1JlYWN0LnZlcnNpb25dKTtcblxuICBpZiAoaXNOYU4ocmVhY3RNYWpvclZlcnNpb24pIHx8IHJlYWN0TWFqb3JWZXJzaW9uIDwgMTgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBpZiAoaXNTdHJpY3RNb2RlLmN1cnJlbnQgPT09IHVuZGVmaW5lZCkge1xuICAgIGxldCBjdXJyZW50T3duZXIgPSBnZXRDdXJyZW50T3duZXIoKTtcbiAgICB3aGlsZSAoY3VycmVudE93bmVyICYmIGN1cnJlbnRPd25lci5yZXR1cm4pIHtcbiAgICAgIGN1cnJlbnRPd25lciA9IGN1cnJlbnRPd25lci5yZXR1cm47XG4gICAgICBpZiAoXG4gICAgICAgIGN1cnJlbnRPd25lci50eXBlID09PSBSRUFDVF9TVFJJQ1RfTU9ERV9UWVBFIHx8XG4gICAgICAgIGN1cnJlbnRPd25lci5lbGVtZW50VHlwZSA9PT0gUkVBQ1RfU1RSSUNUX01PREVfVFlQRVxuICAgICAgKSB7XG4gICAgICAgIGlzU3RyaWN0TW9kZS5jdXJyZW50ID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gISFpc1N0cmljdE1vZGUuY3VycmVudDtcbn07XG4iLCAiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgdHlwZSB7IERpc3Bvc2FibGVGYWN0b3J5IH0gZnJvbSBcIi4vdHlwZXNcIjtcbmltcG9ydCB7IHVzZUlzU3RyaWN0TW9kZSB9IGZyb20gXCIuL3VzZUlzU3RyaWN0TW9kZVwiO1xuaW1wb3J0IHsgdXNlU3RyaWN0RWZmZWN0IH0gZnJvbSBcIi4vdXNlU3RyaWN0RWZmZWN0XCI7XG5pbXBvcnQgeyB1c2VTdHJpY3RNZW1vIH0gZnJvbSBcIi4vdXNlU3RyaWN0TWVtb1wiO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBkaXNwb3NhYmxlIGluc3RhbmNlIGR1cmluZyAqKnJlbmRlciB0aW1lKiogdGhhdCB3aWxsXG4gKiBiZSBjcmVhdGVkIG9uY2UgKGJhc2VkIG9uIGRlcGVuZGVuY3kgYXJyYXkpIGV2ZW4gZHVyaW5nIHN0cmljdCBtb2RlLlxuICogVGhlIGRpc3Bvc2FibGUgd2lsbCBiZSBkaXNwb3NlZCBiYXNlZCBvbiB0aGUgZGVwZW5kZW5jeSBhcnJheSBzaW1pbGFyIHRvXG4gKiB1c2VFZmZlY3QuXG4gKlxuICogXHUyNkEwXHVGRTBGIFRoaXMgY2FuIG9ubHkgYmUgY2FsbGVkICoqb25jZSoqIHBlciBjb21wb25lbnRcbiAqIEBwYXJhbSBmYWN0b3J5IC0gZmFjdG9yeSBmb3IgZGlzcG9zYWJsZSBhbmQgaXRzIGRpc3Bvc2UgZnVuY3Rpb25cbiAqIEBwYXJhbSBkZXBzIC0gU2ltaWxhciB0byBhIFJlYWN0IGRlcGVuZGVuY3kgYXJyYXlcbiAqIEByZXR1cm5zIC0gVGhlIGRpc3Bvc2FibGUgaW5zdGFuY2VcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVzZURpc3Bvc2FibGU8VEluc3RhbmNlPihcbiAgZmFjdG9yeTogRGlzcG9zYWJsZUZhY3Rvcnk8VEluc3RhbmNlPixcbiAgZGVwczogYW55W10sXG4pIHtcbiAgLy8gSW4gcHJvZHVjdGlvbiwgc3RyaWN0IG1vZGUgZG9lcyBub3QgcmVxdWlyZSBzcGVjaWFsIGhhbmRsaW5nXG4gIGNvbnN0IGlzU3RyaWN0TW9kZSA9XG4gICAgdXNlSXNTdHJpY3RNb2RlKCkgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiO1xuXG4gIGNvbnN0IHVzZU1lbW8gPSBpc1N0cmljdE1vZGUgPyB1c2VTdHJpY3RNZW1vIDogUmVhY3QudXNlTWVtbztcbiAgY29uc3QgdXNlRWZmZWN0ID0gaXNTdHJpY3RNb2RlID8gdXNlU3RyaWN0RWZmZWN0IDogUmVhY3QudXNlRWZmZWN0O1xuXG4gIGNvbnN0IFtkaXNwb3NhYmxlLCBkaXNwb3NlXSA9IHVzZU1lbW8oKCkgPT4gZmFjdG9yeSgpLCBkZXBzKSA/PyBbXG4gICAgbnVsbCxcbiAgICAoKSA9PiBudWxsLFxuICBdO1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHJldHVybiBkaXNwb3NlO1xuICB9LCBkZXBzKTtcblxuICByZXR1cm4gZGlzcG9zYWJsZTtcbn1cbiIsICJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGdldEN1cnJlbnRPd25lciB9IGZyb20gXCIuL3VzZUlzU3RyaWN0TW9kZVwiO1xuXG4vLyB3ZSBrbm93IHN0cmljdCBtb2RlIHdpbGwgcmVuZGVyIHVzZU1lbW8gZmFjb3J5IHR3aWNlXG4vLyBrZWVwIGEgd2VhayBzZXQgdG8gZGV0ZWN0IHdoZW4gdGhlIHNlY29uZCByZW5kZXIgaGFwcGVuc1xuY29uc3QgZWZmZWN0U2V0ID0gbmV3IFdlYWtTZXQoKTtcblxuZXhwb3J0IGZ1bmN0aW9uIHVzZVN0cmljdEVmZmVjdChcbiAgZWZmZWN0OiAoKSA9PiAoKSA9PiB2b2lkLFxuICBkZXBzOiBSZWFjdC5EZXBlbmRlbmN5TGlzdCB8IHVuZGVmaW5lZCxcbikge1xuICBjb25zdCBjdXJyZW50T3duZXIgPSBnZXRDdXJyZW50T3duZXIoKTtcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIWVmZmVjdFNldC5oYXMoY3VycmVudE93bmVyKSkge1xuICAgICAgZWZmZWN0U2V0LmFkZChjdXJyZW50T3duZXIpO1xuICAgICAgZWZmZWN0KCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgZGlzcG9zZSA9IGVmZmVjdCgpO1xuICAgIHJldHVybiBkaXNwb3NlO1xuICB9LCBkZXBzKTtcbn1cbiIsICJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGdldEN1cnJlbnRPd25lciB9IGZyb20gXCIuL3VzZUlzU3RyaWN0TW9kZVwiO1xuXG4vLyB3ZSBrbm93IHN0cmljdCBtb2RlIHdpbGwgcmVuZGVyIHVzZU1lbW8gZmFjb3J5IHR3aWNlXG4vLyBrZWVwIGEgd2VhayBzZXQgdG8gZGV0ZWN0IHdoZW4gdGhlIHNlY29uZCByZW5kZXIgaGFwcGVuc1xuY29uc3QgbWVtb1NldCA9IG5ldyBXZWFrU2V0KCk7XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VTdHJpY3RNZW1vPFRNZW1vaXplZD4oXG4gIGZhY3Rvcnk6ICgpID0+IGFueSxcbiAgZGVwczogUmVhY3QuRGVwZW5kZW5jeUxpc3QgfCB1bmRlZmluZWQsXG4pOiBUTWVtb2l6ZWQgfCBudWxsIHtcbiAgcmV0dXJuIFJlYWN0LnVzZU1lbW8oKCkgPT4ge1xuICAgIGNvbnN0IGN1cnJlbnRPd25lciA9IGdldEN1cnJlbnRPd25lcigpO1xuICAgIGlmICghbWVtb1NldC5oYXMoY3VycmVudE93bmVyKSkge1xuICAgICAgbWVtb1NldC5hZGQoY3VycmVudE93bmVyKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiBmYWN0b3J5KCk7XG4gIH0sIGRlcHMpO1xufVxuIl0sCiAgIm1hcHBpbmdzIjogIjtBQUFBLFlBQVksV0FBVztBQUtoQixJQUFNLGtCQUFrQixNQUFNO0FBRW5DLE1BQUk7QUFHRixXQUFRLE1BQ04sR0FBRztBQUFBLE1BQ0Q7QUFBQSxJQUNGLENBQ0YsRUFBRSxFQUFFLFNBQVM7QUFBQSxFQUNmLFFBQVE7QUFBQSxFQUFDO0FBRVQsTUFBSTtBQUdGLFdBQVEsTUFDTixHQUFHLE9BQU8sb0RBQW9ELENBQ2hFLEVBQUUsa0JBQWtCO0FBQUEsRUFDdEIsUUFBUTtBQUNOLFFBQUksUUFBUSxJQUFJLGFBQWEsY0FBYztBQUN6QyxjQUFRO0FBQUEsUUFDTjtBQUFBLE1BQ0Y7QUFBQSxJQUNGO0FBQUEsRUFDRjtBQUNGO0FBRUEsSUFBTSx5QkFBdUMsdUJBQU8sSUFBSSxtQkFBbUI7QUFRcEUsSUFBTSxrQkFBa0IsTUFBZTtBQUc1QyxNQUFJLFFBQVEsSUFBSSxhQUFhLGNBQWM7QUFDekMsV0FBTztBQUFBLEVBQ1Q7QUFFQSxRQUFNLGVBQXFCLGFBQTRCLE1BQVM7QUFDaEUsUUFBTSxvQkFBMEIsY0FBUSxNQUFNO0FBQzVDLFdBQU8sT0FBYSxjQUFRLE1BQU0sR0FBRyxFQUFFLENBQUMsQ0FBQztBQUFBLEVBQzNDLEdBQUcsQ0FBTyxhQUFPLENBQUM7QUFFbEIsTUFBSSxNQUFNLGlCQUFpQixLQUFLLG9CQUFvQixJQUFJO0FBQ3RELFdBQU87QUFBQSxFQUNUO0FBRUEsTUFBSSxhQUFhLFlBQVksUUFBVztBQUN0QyxRQUFJLGVBQWUsZ0JBQWdCO0FBQ25DLFdBQU8sZ0JBQWdCLGFBQWEsUUFBUTtBQUMxQyxxQkFBZSxhQUFhO0FBQzVCLFVBQ0UsYUFBYSxTQUFTLDBCQUN0QixhQUFhLGdCQUFnQix3QkFDN0I7QUFDQSxxQkFBYSxVQUFVO0FBQUEsTUFDekI7QUFBQSxJQUNGO0FBQUEsRUFDRjtBQUVBLFNBQU8sQ0FBQyxDQUFDLGFBQWE7QUFDeEI7OztBQ3RFQSxZQUFZQSxZQUFXOzs7QUNBdkIsWUFBWUMsWUFBVztBQUt2QixJQUFNLFlBQVksb0JBQUksUUFBUTtBQUV2QixTQUFTLGdCQUNkLFFBQ0EsTUFDQTtBQUNBLFFBQU0sZUFBZSxnQkFBZ0I7QUFDckMsRUFBTSxpQkFBVSxNQUFNO0FBQ3BCLFFBQUksQ0FBQyxVQUFVLElBQUksWUFBWSxHQUFHO0FBQ2hDLGdCQUFVLElBQUksWUFBWTtBQUMxQixhQUFPO0FBQ1A7QUFBQSxJQUNGO0FBRUEsVUFBTSxVQUFVLE9BQU87QUFDdkIsV0FBTztBQUFBLEVBQ1QsR0FBRyxJQUFJO0FBQ1Q7OztBQ3RCQSxZQUFZQyxZQUFXO0FBS3ZCLElBQU0sVUFBVSxvQkFBSSxRQUFRO0FBRXJCLFNBQVMsY0FDZCxTQUNBLE1BQ2tCO0FBQ2xCLFNBQWEsZUFBUSxNQUFNO0FBQ3pCLFVBQU0sZUFBZSxnQkFBZ0I7QUFDckMsUUFBSSxDQUFDLFFBQVEsSUFBSSxZQUFZLEdBQUc7QUFDOUIsY0FBUSxJQUFJLFlBQVk7QUFDeEIsYUFBTztBQUFBLElBQ1Q7QUFFQSxXQUFPLFFBQVE7QUFBQSxFQUNqQixHQUFHLElBQUk7QUFDVDs7O0FGSE8sU0FBUyxjQUNkLFNBQ0EsTUFDQTtBQXBCRjtBQXNCRSxRQUFNLGVBQ0osZ0JBQWdCLEtBQUssUUFBUSxJQUFJLGFBQWE7QUFFaEQsUUFBTUMsV0FBVSxlQUFlLGdCQUFzQjtBQUNyRCxRQUFNQyxhQUFZLGVBQWUsa0JBQXdCO0FBRXpELFFBQU0sQ0FBQyxZQUFZLE9BQU8sS0FBSSxLQUFBRCxTQUFRLE1BQU0sUUFBUSxHQUFHLElBQUksTUFBN0IsWUFBa0M7QUFBQSxJQUM5RDtBQUFBLElBQ0EsTUFBTTtBQUFBLEVBQ1I7QUFDQSxFQUFBQyxXQUFVLE1BQU07QUFDZCxXQUFPO0FBQUEsRUFDVCxHQUFHLElBQUk7QUFFUCxTQUFPO0FBQ1Q7IiwKICAibmFtZXMiOiBbIlJlYWN0IiwgIlJlYWN0IiwgIlJlYWN0IiwgInVzZU1lbW8iLCAidXNlRWZmZWN0Il0KfQo=","/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  // https://drafts.csswg.org/css-transforms-2/#individual-transforms\n  return ['transform', 'translate', 'scale', 'rotate', 'perspective'].some(value => css[value] ? css[value] !== 'none' : false) || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'translate', 'scale', 'rotate', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n","import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getNodeScroll, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\nfunction getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {\n  if (ignoreScrollbarX === void 0) {\n    ignoreScrollbarX = false;\n  }\n  const htmlRect = documentElement.getBoundingClientRect();\n  const x = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 :\n  // RTL <body> scrollbar.\n  getWindowScrollBarX(documentElement, htmlRect));\n  const y = htmlRect.top + scroll.scrollTop;\n  return {\n    x,\n    y\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y,\n      width: clippingAncestor.width,\n      height: clippingAncestor.height\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n      // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\nfunction rectsAreEqual(a, b) {\n  return a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height;\n}\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const elementRectForRootMargin = element.getBoundingClientRect();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = elementRectForRootMargin;\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      if (ratio === 1 && !rectsAreEqual(elementRectForRootMargin, element.getBoundingClientRect())) {\n        // It's possible that even though the ratio is reported as 1, the\n        // element is not actually fully within the IntersectionObserver's root\n        // area anymore. This can happen under performance constraints. This may\n        // be a bug in the browser's IntersectionObserver implementation. To\n        // work around this, we compare the element's bounding rect now with\n        // what it was at the time we created the IntersectionObserver. If they\n        // are not equal then the element moved, so we refresh.\n        refresh();\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && !rectsAreEqual(prevRefRect, nextRefRect)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n"],"names":["getCurrentOwner","concat","A","getOwner","ReactCurrentOwner","current","useIsStrictMode","effectSet","WeakSet","useStrictEffect","effect","deps","currentOwner","has","add","memoSet","useStrictMemo","factory","useDisposable","_a","isStrictMode","useMemo4","useEffect3","disposable","dispose","sides","Math","min","max","round","createCoords","floor","v","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","start","end","clamp","value","param","placement","split","getOppositeAxis","axis","getAxisLength","includes","getAlignmentAxis","replace","alignment","getOppositePlacement","side","padding","expandPaddingObject","rect","width","height","computeCoordsFromPlacement","_ref","rtl","reference","floating","sideAxis","alignmentAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","async","detectOverflow","state","options","_await$platform$isEle","platform","rects","elements","strategy","boundary","rootBoundary","elementContext","altBoundary","paddingObject","element","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","getSideOffsets","overflow","isAnySideFullyClipped","some","hasWindow","window","getNodeName","node","isNode","nodeName","toLowerCase","getWindow","_node$ownerDocument","ownerDocument","defaultView","document","documentElement","Node","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","overflowX","overflowY","display","getComputedStyle","test","isTableElement","isTopLayer","selector","matches","e","isContainingBlock","elementOrCss","webkit","isWebKit","css","containerType","backdropFilter","filter","willChange","contain","CSS","supports","isLastTraversableNode","getNodeScroll","scrollLeft","scrollTop","scrollX","scrollY","getParentNode","result","assignedSlot","parentNode","host","getNearestOverflowAncestor","body","list","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","frameElement","getFrameElement","visualViewport","parent","Object","getPrototypeOf","getCssDimensions","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","leftScroll","getHTMLOffset","scroll","ignoreScrollbarX","htmlRect","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scrollWidth","scrollHeight","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","offsetRect","htmlOffset","isStaticPositioned","getTrueOffsetParent","polyfill","rawOffsetParent","svgOffsetParent","currentNode","getContainingBlock","topLayer","clippingAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","set","getClippingElementAncestors","this","_c","firstClippingAncestor","clippingRect","reduce","accRect","getElementRects","data","getOffsetParentFn","getDimensionsFn","getDimensions","floatingDimensions","getClientRects","Array","from","isRTL","name","fn","_middlewareData$offse","_middlewareData$arrow","middlewareData","diffCoords","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","convertValueToCoords","offset","arrow","alignmentOffset","checkMainAxis","checkCrossAxis","limiter","detectOverflowOptions","mainAxisCoord","crossAxisCoord","maxSide","limitedCoords","enabled","_middlewareData$flip","initialPlacement","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","initialSideAxis","isBasePlacement","oppositePlacement","getExpandedPlacements","hasFallbackAxisSideDirection","push","isStart","lr","rl","tb","bt","getSideList","map","getOppositeAxisPlacements","placements","overflows","overflowsData","flip","length","mainAlignmentSide","every","_middlewareData$flip2","_overflowsData$filter","nextIndex","index","nextPlacement","reset","resetPlacement","d","sort","a","b","_overflowsData$filter2","currentSideAxis","acc","_state$middlewareData","_state$middlewareData2","apply","isYAxis","heightSide","widthSide","maximumClippingHeight","maximumClippingWidth","overflowAvailableHeight","overflowAvailableWidth","noShift","shift","availableHeight","availableWidth","xMin","xMax","yMin","yMax","nextDimensions","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","arrowDimensions","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","centerOffset","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse2","isOriginSide","Map","mergedOptions","platformWithCache","config","middleware","validMiddleware","Boolean","statefulPlacement","resetCount","i","nextX","nextY","computePosition"],"sourceRoot":""}